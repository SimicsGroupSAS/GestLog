// <auto-generated />
using System;
using GestLog.Modules.DatabaseConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestLog.Migrations
{
    [DbContext(typeof(GestLogDbContext))]
    [Migration("20251030134710_AddPasswordManagementColumnsToUsuario")]
    partial class AddPasswordManagementColumnsToUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.ConexionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adaptador")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CodigoEquipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DireccionIPv4")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DireccionMAC")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("MascaraSubred")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PuertoEnlace")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoEquipo");

                    b.ToTable("ConexionesEquiposInformaticos", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.DiscoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapacidadGB")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEquipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroDisco")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoEquipo");

                    b.ToTable("Discos");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EjecucionSemanal", b =>
                {
                    b.Property<Guid>("EjecucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("AnioISO")
                        .HasColumnType("smallint");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("FechaEjecucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaObjetivo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResultadoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SemanaISO")
                        .HasColumnType("tinyint");

                    b.Property<string>("UsuarioEjecuta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EjecucionId");

                    b.HasIndex("PlanId", "AnioISO", "SemanaISO")
                        .IsUnique();

                    b.ToTable("EjecucionSemanal", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoAnydesk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Costo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreEquipo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Procesador")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SO")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sede")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAsignado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo");

                    b.ToTable("EquiposInformaticos");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PerifericoEquipoInformaticoEntity", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoEquipoAsignado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Costo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Dispositivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Sede")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAsignado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoEquipoAsignado");

                    b.ToTable("PerifericosEquiposInformaticos");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PlanCronogramaEquipo", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ChecklistJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoEquipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("DiaProgramado")
                        .HasColumnType("tinyint");

                    b.Property<string>("EquipoCodigo")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlanId");

                    b.HasIndex("EquipoCodigo");

                    b.ToTable("PlanCronogramaEquipo", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.SlotRamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapacidadGB")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEquipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Frecuencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroSlot")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("bit");

                    b.Property<string>("TipoMemoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoEquipo");

                    b.ToTable("SlotsRam");
                });

            modelBuilder.Entity("GestLog.Modules.GestionMantenimientos.Models.Entities.CronogramaMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FrecuenciaMtto")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sede")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semanas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cronogramas");
                });

            modelBuilder.Entity("GestLog.Modules.GestionMantenimientos.Models.Entities.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clasificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompradoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrecuenciaMtto")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Sede")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("GestLog.Modules.GestionMantenimientos.Models.Entities.MantenimientoPlantillaTarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("Predeterminada")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MantenimientoPlantillaTarea", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.GestionMantenimientos.Models.Entities.SeguimientoMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Costo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRealizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Frecuencia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semana")
                        .HasColumnType("int");

                    b.Property<int>("TipoMtno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("GestLog.Modules.GestionMantenimientos.Models.Entities.SeguimientoMantenimientoTarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completada")
                        .HasColumnType("bit");

                    b.Property<int?>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MantenimientoPlantillaTareaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreTarea")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RepuestoUsado")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SeguimientoMantenimientoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeguimientoMantenimientoId");

                    b.ToTable("SeguimientoMantenimientoTarea", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Personas.Models.Persona", b =>
                {
                    b.Property<Guid>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sede")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPersona");

                    b.HasIndex("CargoId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Auditoria", b =>
                {
                    b.Property<Guid>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadAfectada")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdEntidad")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioResponsable")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdAuditoria");

                    b.ToTable("Auditoria", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Cargo", b =>
                {
                    b.Property<Guid>("IdCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCargo");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Permiso", b =>
                {
                    b.Property<Guid>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PermisoPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RolIdRol")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPermiso");

                    b.HasIndex("PermisoPadreId");

                    b.HasIndex("RolIdRol");

                    b.ToTable("Permisos", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Rol", b =>
                {
                    b.Property<Guid>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.RolPermiso", b =>
                {
                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPermiso")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdRol", "IdPermiso");

                    b.HasIndex("IdPermiso");

                    b.ToTable("RolPermisos", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.TipoDocumento", b =>
                {
                    b.Property<Guid>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoDocumento");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Desactivado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoAcceso")
                        .HasColumnType("datetime2");

                    b.Property<string>("HashContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChangeAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.UsuarioPermiso", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPermiso")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario", "IdPermiso");

                    b.HasIndex("IdPermiso");

                    b.ToTable("UsuarioPermisos", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.UsuarioRol", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioRoles", (string)null);
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.ConexionEntity", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", "EquipoInformatico")
                        .WithMany("Conexiones")
                        .HasForeignKey("CodigoEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoInformatico");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.DiscoEntity", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", "Equipo")
                        .WithMany("Discos")
                        .HasForeignKey("CodigoEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EjecucionSemanal", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PlanCronogramaEquipo", "Plan")
                        .WithMany("Ejecuciones")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PerifericoEquipoInformaticoEntity", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", "EquipoAsignado")
                        .WithMany()
                        .HasForeignKey("CodigoEquipoAsignado");

                    b.Navigation("EquipoAsignado");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PlanCronogramaEquipo", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoCodigo");

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.SlotRamEntity", b =>
                {
                    b.HasOne("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", "Equipo")
                        .WithMany("SlotsRam")
                        .HasForeignKey("CodigoEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("GestLog.Modules.Personas.Models.Persona", b =>
                {
                    b.HasOne("GestLog.Modules.Usuarios.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestLog.Modules.Usuarios.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Permiso", b =>
                {
                    b.HasOne("GestLog.Modules.Usuarios.Models.Permiso", null)
                        .WithMany("SubPermisos")
                        .HasForeignKey("PermisoPadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GestLog.Modules.Usuarios.Models.Rol", null)
                        .WithMany("Permisos")
                        .HasForeignKey("RolIdRol");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.RolPermiso", b =>
                {
                    b.HasOne("GestLog.Modules.Usuarios.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestLog.Modules.Usuarios.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.UsuarioPermiso", b =>
                {
                    b.HasOne("GestLog.Modules.Usuarios.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestLog.Modules.Usuarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.UsuarioRol", b =>
                {
                    b.HasOne("GestLog.Modules.Usuarios.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestLog.Modules.Usuarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.EquipoInformaticoEntity", b =>
                {
                    b.Navigation("Conexiones");

                    b.Navigation("Discos");

                    b.Navigation("SlotsRam");
                });

            modelBuilder.Entity("GestLog.Modules.GestionEquiposInformaticos.Models.Entities.PlanCronogramaEquipo", b =>
                {
                    b.Navigation("Ejecuciones");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Permiso", b =>
                {
                    b.Navigation("SubPermisos");
                });

            modelBuilder.Entity("GestLog.Modules.Usuarios.Models.Rol", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
